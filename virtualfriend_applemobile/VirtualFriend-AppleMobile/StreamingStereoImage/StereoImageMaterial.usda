#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["StereoRenderMaterial", "SideBySideStereoRenderMaterial", "Cube"]
    def Material "StereoRenderMaterial"
    {
        asset inputs:Left_Image (
            colorSpace = "srgb_displayp3"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-940.77747, 46.325825)
                    float2 sizeInSubgraph = (138.5, 53)
                    int stackingOrderInSubgraph = 1279
                }
            }
        )
        asset inputs:Right_Image (
            colorSpace = "srgb_displayp3"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-942.0648, 212.37627)
                    float2 sizeInSubgraph = (146.5, 53)
                    int stackingOrderInSubgraph = 1277
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/StereoRenderMaterial/PBRSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/StereoRenderMaterial/DefaultSurfaceShader.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (57.6875, 123.3125)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1283

        def Shader "DefaultSurfaceShader" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            float inputs:roughness = 0.75
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Root/StereoRenderMaterial/GeometrySwitchCameraIndex.outputs:out>
            color3f inputs:emissiveColor.connect = </Root/StereoRenderMaterial/GeometrySwitchCameraIndex.outputs:out>
            float inputs:ior = 0
            float inputs:metallic
            float3 inputs:normal
            float inputs:occlusion
            float inputs:opacity
            float inputs:opacityThreshold
            float inputs:roughness = 1
            token outputs:out
            float2 ui:nodegraph:node:pos = (-173.94922, 127.71875)
            float2 ui:nodegraph:node:size = (159.5, 307)
            int ui:nodegraph:node:stackingOrder = 1277
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:emissiveColor"]
        }

        def Shader "Image"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default = (1, 0, 0.009548978) (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file (
                colorSpace = "srgb_texture"
            )
            asset inputs:file.connect = </Root/StereoRenderMaterial.inputs:Left_Image>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode = "periodic"
            string inputs:vaddressmode = "periodic"
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-690.5575, 95.75305)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1278
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default"]
        }

        def Shader "Image_1"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default = (1, 1, 1) (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file.connect = </Root/StereoRenderMaterial.inputs:Right_Image>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-691.20514, 268.43466)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1277
        }

        def Shader "PBRSurface"
        {
            uniform token info:id = "ND_realitykit_pbr_surfaceshader"
            color3f inputs:baseColor = (0, 0, 0) (
                colorSpace = "srgb_displayp3"
            )
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:emissiveColor = (0, 0, 0) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:emissiveColor.connect = </Root/StereoRenderMaterial/GeometrySwitchCameraIndex.outputs:out>
            float inputs:metallic
            float3 inputs:normal
            float inputs:roughness = 1
            float inputs:specular = 0
            token outputs:out
            float2 ui:nodegraph:node:pos = (-174.36328, 446.27344)
            float2 ui:nodegraph:node:size = (167, 307)
            int ui:nodegraph:node:stackingOrder = 1277
        }

        def Shader "GeometrySwitchCameraIndex"
        {
            uniform token info:id = "ND_realitykit_geometry_switch_cameraindex_color3"
            color3f inputs:left.connect = </Root/StereoRenderMaterial/Image.outputs:out>
            color3f inputs:mono = (0, 0.08667583, 0.9863684) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:mono.connect = </Root/StereoRenderMaterial/Image.outputs:out>
            color3f inputs:right.connect = </Root/StereoRenderMaterial/Image_1.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-434.48322, 169.02385)
            float2 ui:nodegraph:node:size = (237, 145)
            int ui:nodegraph:node:stackingOrder = 1277
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:mono"]
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/SideBySideStereoRenderMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
    }

    def Material "SideBySideStereoRenderMaterial"
    {
        asset inputs:Image (
            colorSpace = "srgb_displayp3"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-702.27747, -62.68199)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 1573
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/SideBySideStereoRenderMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/SideBySideStereoRenderMaterial/UsdPreviewSurface.outputs:surface>
        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex", "outputs:mtlx:surface"]
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (299.25, 99.5)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (208.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1541

        def Shader "PreviewSurface" (
            active = true
        )
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </Root/SideBySideStereoRenderMaterial/GeometrySwitchCameraIndex.outputs:out>
            color3f inputs:emissiveColor
            float inputs:ior = 0
            float inputs:metallic
            float3 inputs:normal
            float inputs:occlusion
            float inputs:opacity
            float inputs:opacityThreshold
            float inputs:roughness = 1
            token outputs:out
            float2 ui:nodegraph:node:pos = (64.55078, 18.710938)
            float2 ui:nodegraph:node:size = (159.5, 307)
            int ui:nodegraph:node:stackingOrder = 1569
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:emissiveColor", "inputs:emissiveColor"]
        }

        def Shader "GeometrySwitchCameraIndex"
        {
            uniform token info:id = "ND_realitykit_geometry_switch_cameraindex_color3"
            color3f inputs:left.connect = </Root/SideBySideStereoRenderMaterial/TiledImage_Left.outputs:out>
            color3f inputs:mono = (0, 0.08667583, 0.9863684) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:mono.connect = </Root/SideBySideStereoRenderMaterial/TiledImage_Left.outputs:out>
            color3f inputs:right.connect = </Root/SideBySideStereoRenderMaterial/TiledImage_Right.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-195.98322, 60.016037)
            float2 ui:nodegraph:node:size = (237, 145)
            int ui:nodegraph:node:stackingOrder = 1566
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:mono"]
        }

        def Shader "TiledImage_Left"
        {
            uniform token info:id = "ND_tiledimage_color3"
            color3f inputs:default = (1, 0.9050206, 0.008873106) (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file.connect = </Root/SideBySideStereoRenderMaterial.inputs:Image>
            string inputs:filtertype = "closest"
            float2 inputs:realworldtilesize
            float2 inputs:uvtiling = (0.5, 1)
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-473.48532, -10.630167)
            float2 ui:nodegraph:node:size = (158.5, 235)
            int ui:nodegraph:node:stackingOrder = 1574
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uvtiling"]
        }

        def Shader "TiledImage_Right"
        {
            uniform token info:id = "ND_tiledimage_color3"
            color3f inputs:default = (1, 0.93320847, 0) (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file (
                colorSpace = "srgb_displayp3"
            )
            asset inputs:file.connect = </Root/SideBySideStereoRenderMaterial.inputs:Image>
            string inputs:filtertype = "closest"
            float2 inputs:realworldimagesize
            float2 inputs:realworldtilesize
            float2 inputs:texcoord
            float2 inputs:uvoffset = (0.5, 0)
            float2 inputs:uvtiling = (0.5, 1)
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-473.57523, 246.361)
            float2 ui:nodegraph:node:size = (161, 235)
            int ui:nodegraph:node:stackingOrder = 1572
        }

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 1
            color3f inputs:color.connect = </Root/SideBySideStereoRenderMaterial/Power.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float inputs:opacity
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (71.21951, 284.36124)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 1570
        }

        def Shader "Constant"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 1.2
            float outputs:out
            float2 ui:nodegraph:node:pos = (-259.35107, 306.39667)
            float2 ui:nodegraph:node:size = (141.5, 53)
            int ui:nodegraph:node:stackingOrder = 1568
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_color3FA"
            prepend color3f inputs:in1.connect = </Root/SideBySideStereoRenderMaterial/GeometrySwitchCameraIndex.outputs:out>
            float inputs:in2.connect = </Root/SideBySideStereoRenderMaterial/Constant.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-122.54342, 242.87909)
            float2 ui:nodegraph:node:size = (123.5, 40)
            int ui:nodegraph:node:stackingOrder = 1567
        }
    }
}

